version: '3.8'

services:
  # Nginx service for SSL termination
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt   # Use host machine's certs
      - ./certbot/www:/var/www/certbot
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - ghost-cms
      - certbot
    networks:
      - app-network
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  # Certbot service for obtaining SSL certificates
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - app-network

  # NestJS Application
  nest-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nest-app
    environment:
      NODE_ENV: production
      ENV: production
      REDIS_HOST: redis
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_USER: ${REDIS_USER_NAME}
    env_file: 
      - .env.production
    ports:
      - "3005:3005"
    depends_on:
      - redis
    volumes:
      - ./:/app
    networks:
      - app-network
    logging:
      driver: "json-file"


  # Redis service for caching
  redis:
    image: "redis:latest"
    container_name: redis
    restart: always
    ports:
      - "6380:6379"
    networks:
      - app-network
    volumes: 
      - cache:/data
      - ./init-redis.sh:/usr/local/bin/init-redis.sh
    environment:
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_USER=${REDIS_USER_NAME}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_DATABASES=16
    command: ["/bin/bash", "/usr/local/bin/init-redis.sh"]


  # Ghost CMS
  ghost-cms:
    image: ghost:5-alpine
    container_name: ghost-cms
    environment:
      database__client: mysql
      database__connection__host: mysql
      database__connection__user: ${GHOST_MYSQL_USER}
      database__connection__password: ${GHOST_MYSQL_ROOT_PASSWORD}
      database__connection__database: ${GHOST_MYSQL_DATABASE}
      url: https://codeamautas.com
    volumes:
      - ./ghost-content:/var/lib/ghost/content
    ports:
      - "8080:2368"
    depends_on:
      - mysql
    networks:
      - app-network
    restart: unless-stopped

  # MySQL service for Ghost CMS
  mysql:
    image: mysql:8
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${GHOST_MYSQL_ROOT_PASSWORD}
    user: "root:root" 
    command: >
      --bind-address=0.0.0.0
    volumes:
      - ./mysql-data:/var/lib/mysql:Z  # Use named volume
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

volumes:
  cache:
    driver: local
  mysql-data:
    driver: local
networks:
  app-network:
    driver: bridge
